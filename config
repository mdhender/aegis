/*
 *	aegis - project change supervisor
 *	Copyright (C) 1991, 1992, 1993, 1994 Peter Miller.
 *	All rights reserved.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this program; if not, write to the Free Software
 *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 * MANIFEST: instructions to aegis, per-project configuration
 */

/*
 * how to build the project
 * mandatory
 */
build_command =
	"cook -b ${source aux/Howto.cook} project=$project \
change=$change version=$version arch=$uname -nl -st";

/*
 * When do -Integrate_Begin, link the baseline to the integration directory,
 * rather than copying it.  This should be much faster.
 *
 * There is a gotcha: all the recipes in Howto.cook must unlink their targets
 * before re-creating them, otherwise the baseline will be trashed.
 */
link_integration_directory = true;

/*
 * create a new history
 * always executed as the project owner
 */
history_create_command =
	"fhist ${basename $history} -create -i $input -p ${dirname $history} -r";

/*
 * get a file from history
 * may be executed by developers
 */
history_get_command =
	"fhist ${basename $history} -e '$edit' -o $output \
-p ${dirname $history} -v 0";

/*
 * add a new change to the history
 * always executed as the project owner
 */
history_put_command =
	"fhist ${basename $history} -cu -i $input -p ${dirname $history} -r";

/*
 * query the topmost edit of a history file
 * Result to be printed on stdout.
 * may be executed by developers
 */
history_query_command =
	"fhist ${basename $history} -l 0 -p ${dirname $history} -q";

/*
 * difference of 2 files
 */
diff_command = "fcomp -w -s $original $input -o $output";

/*
 * difference of 3 files
 */
diff3_command = "fmerge $original $mostrecent $input -o $output -c $input,C";

/*
 * whenever files are added to or removed from the change,
 * execute the following command.
 */
change_file_command = "rm -f .c_inclrc";

/*
 * new file templates
 */
file_template =
[
	{
		pattern = [ "*.[cyl]" ];
		body = "${read_file ${source aux/template/c abs}}";
	},
	{
		pattern = [ "*.h" ];
		body = "${read_file ${source aux/template/h abs}}";
	},
	{
		pattern = [ "test/*/*.sh" ];
		body = "${read_file ${source aux/template/test abs}}";
	},
	{
		pattern = [ "*.sh" ];
		body = "${read_file ${source aux/template/sh abs}}";
	},
	{
		pattern = [ "*.man", "*.[12345678]" ];
		body = "${read_file ${source aux/template/man abs}}";
	},
	{
		pattern = [ "*.rpt" ];
		body = "${read_file ${source aux/template/report abs}}";
	},
	{
		pattern = [ "*.so", "*.ms", "*.me" ];
		body = "${read_file ${source aux/template/ms abs}}";
	},
	{
		pattern = [ "*" ];
		body = "${read_file ${source aux/template/generic abs}}";
	}
];

develop_begin_command = "ln -s $baseline bl";

/*
 * This command is run at the beginning of an integration.
 * The aux/Howto.cook file assumes this has been done.
 */
integrate_begin_command =
       "rm -f .cook.fp common/patchlevel.h aux/new.so doc/version.so aegis.log";

/*
 * list of architectures on which each change must build and test
 */
architecture =
[
   /*
	{
		name = "aix";
		pattern = "AIX-*-*-*";
	},
   */
	{
		name = "alpha";
		pattern = "OSF1-*-*-alpha";
	},
	{
		name = "sun4";
		pattern = "SunOS-4.1*-*-sun4*";
	},
	{
		name = "sun5";
		pattern = "SunOS-5.*-*-sun4*";
	},
];

test_command = "$sh $filename $arch";
