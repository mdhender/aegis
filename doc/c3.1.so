.\"
.\"	aegis - project change supervisor
.\"	Copyright (C) 1991, 1992, 1993, 1994, 1995 Peter Miller;
.\"	All rights reserved.
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\"
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\"
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\" MANIFEST: User Guide, The History Tool, Using SCCS
.\"
.bp
.nh 2 "Using SCCS"
.LP
The entries for the commands are listed below.
SCCS uses a slightly different model than aegis wants,
so some maneuvering is required.
The command strings in this section assume that the SCCS commands
.I admin
and
.I get
and
.I delta
are in the command search PATH,
but you may like to hard-wire the paths,
or set PATH at the start of each.
You should also note that the strings are always handed to
the Bourne shell to be executed,
and are set to exit with an error immediately a sub-command fails.
.nh 3 "history_create_command"
.LP
This command is used to create a new project history.
The command is always executed as the project owner.
.LP
The following substitutions are available:
.IP ${Input}
absolute path of the source file
.IP ${History}
absolute path of the history file
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_create_command =
  "admin -n -i$i -y \e
    ${d $h}/s.${b $h}; \e
  admin -di ${d $h}/s.${b $h}; \e
  get -e -t -p -s \e
    ${d $h}/s.${b $h} \e
    > /dev/null";
.E)
.LP
Note that the "get -e" is necessary to put the s.file into the edit state,
but the result of the get can be discarded,
because the "admin -i" did not remove the file.
.nh 3 "history_get_command"
.LP
This command is used to get a specific edit back from history.
The command may be executed by developers.
.LP
The following substitutions are available:
.IP ${History}
absolute path of the history file
.IP ${Edit}
edit number, as given by history_\%query_\%command
.IP ${Output}
absolute path of the destination file
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_get_command =
  "get -r'$e' -s -p -k \e
    ${d $h}/s.${b $h} > $o";
.E)
.nh 3 "history_put_command"
.LP
This command is used to add a new "top-most" entry to the
history file.
This command is always executed as the project owner.
.LP
The following substitutions are available:
.IP ${Input}
absolute path of source file
.IP ${History}
absolute path of history file
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_put_command =
  "cd ${d $i}; \e
  delta -s -y ${d $h}/s.${b $h}; \e
  get -e -t -p -s \e
    ${d $h}/s.${b $h} > $i";
.E)
.LP
Note that the SCCS file is left in the edit state,
and that the source file is left in the baseline.
.nh 3 "history_query_command"
.LP
This command is used to query what the history mechanism calls the top-most
edit of a history file.
The result may be any arbitrary string,
it need not be anything like a number,
just so long as it uniquely identifies the edit
for use by the
.I history_get_command
at a later date.
The edit number is to be printed on the standard output.
This command may be executed by developers.
.LP
The following substitutions are available:
.IP ${History}
absolute path of the history file
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_query_command =
  "get -t -g ${d $h}/s.${b $h} 2>&1";
.E)
.LP
Note that "get" reports the edit number on stderr.
.nh 3 "Templates"
The
.I lib/config.example/sccs
file in the Aegis distribution
contains all of the above commands,
so that you may readily insert them into your project
.I config
file.
