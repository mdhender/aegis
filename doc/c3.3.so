.\"
.\"	aegis - project change supervisor
.\"	Copyright (C) 1991, 1992, 1993 Peter Miller.
.\"	All rights reserved.
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\"
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\"
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\" MANIFEST: User Guide, The History Tool, Using fhist
.\"
.bp
.nh 2 "Using fhist"
.LP
The
.I fhist
program was written by David I. Bell
and is admirably suited to providing a history mechanism
with out the "cruft" that SCCS and RCS impose.
.nh 3 "history_create_command"
.LP
This command is used to create a new project history.
The command is always executed as the project owner.
.LP
The following substitutions are available:
.DS
.TS
tab(;);
l l.
${Input};absolute path of the source file
${History};absolute path of the history file
.TE
.DE
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_create_command =
	"fhist ${b $i} -create -i $i -p ${d $h} -r";
.E)
.nh 3 "history_get_command"
.LP
This command is used to get a specific edit back from history.
The command may be executed by developers.
.LP
The following substitutions are available:
.DS
.TS
tab(;);
l l.
${History};absolute path of the history file
${Edit};edit number, as given by history_query_command
${Output};absolute path of the destination file
.TE
.DE
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_get_command =
	"fhist ${b $h} -e '$e' -o $o -p ${d $h}";
.E)
.LP
Note that the destination filename will
.I never
look anything like the history source filename,
so the -p is essential.
.nh 3 "history_put_command"
.LP
This command is used to add a new "top-most" entry to the
history file.
This command is always executed as the project owner.
.LP
The following substitutions are available:
.DS
.TS
tab(;);
l l.
${Input};absolute path of source file
${History};absolute path of history file
.TE
.DE
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_put_command =
	"fhist ${b $i} -u -i $i -p ${d $h} -r";
.E)
.LP
Note that the source file is left in the baseline.
.LP
.nh 3 "history_query_command"
.LP
This command is used to query what the history mechanism calls the top-most
edit of a history file.
The result may be any arbitrary string,
it need not be anything like a number,
just so long as it uniquely identifies the edit
for use by the
.I history_get_command
at a later date.
The edit number is to be printed on the standard output.
This command may be executed by developers.
.LP
The following substitutions are available:
.DS
.TS
tab(;);
l l.
${History};absolute path of the history file
.TE
.DE
.LP
The entry in the
.I "config"
file looks like this:
.E(
history_query_command =
	"fhist ${b $h} -l 0 -p ${d $h} -q";
.E)
