dnl
dnl	aegis - a project change supervisor
dnl	Copyright (C) 1994 Peter Miller.
dnl	All rights reserved.
dnl
dnl	This program is free software; you can redistribute it and/or modify
dnl	it under the terms of the GNU General Public License as published by
dnl	the Free Software Foundation; either version 2 of the License, or
dnl	(at your option) any later version.
dnl
dnl	This program is distributed in the hope that it will be useful,
dnl	but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl	GNU General Public License for more details.
dnl
dnl	You should have received a copy of the GNU General Public License
dnl	along with this program; if not, write to the Free Software
dnl	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
dnl
dnl MANIFEST: how to configure cook, input to the GNU autoconf program
dnl
AC_INIT(common/patchlevel.h)
AC_CONFIG_HEADER(common/config.h)
AC_PROG_CC
AC_PROG_CPP

dnl
dnl	Avoid the /usr/ucb/cc compiler, it screws up readdir,
dnl	some systems seem to have the ucb one early in the path.
dnl
dnl	ranlib is unneccessary, but setting it to : will
dnl	not work, so set it to echo.
dnl
dnl	This test must be before the stdarg test
dnl	and before AC_CONST
dnl
if test -z "$GCC" ; then
echo checking for Pyramid
AC_PROGRAM_EGREP(yes,[#ifdef __pyrsoft
  yes
#endif], CC="/usr/ccs/bin/cc"
RANLIB="echo no need to ranlib")
fi

AC_PROG_INSTALL
AC_PROG_YACC
AC_PROG_RANLIB
AC_AIX
AC_MINIX
AC_ISC_POSIX
AC_SCO_INTL
AC_HAVE_LIBRARY(socket)
AC_HAVE_LIBRARY(m)

dnl
dnl	Test to see where TIOCGWINSZ and struct winsize are defined.
dnl
echo checking for TIOCGWINSZ and struct winsize
AC_TEST_PROGRAM([
#include <sys/ioctl.h>
int main(argc, argv)int argc; char **argv;{
#ifdef TIOCGWINSZ
struct winsize ws; ws.ws_col = 0; exit(ws.ws_col);
#else
exit(1);
#endif
}]
, AC_DEFINE(HAVE_winsize_SYS_IOCTL_H))
AC_TEST_PROGRAM([
#include <termios.h>
int main(argc, argv)int argc; char **argv;{
#ifdef TIOCGWINSZ
struct winsize ws; ws.ws_col = 0; exit(ws.ws_col);
#else
exit(1);
#endif
}]
, AC_DEFINE(HAVE_winsize_TERMIOS_H))dnl

dnl
dnl	Test to see if stdarg.h is available *and* works.
dnl
echo checking for working stdarg.h
AC_TEST_PROGRAM([
#include <stdarg.h>
char *foo = "test";
#if defined(__STDC__) && __STDC__
int test(char*,...);
#endif
int test(fmt)char*fmt;{va_list ap;char*a;int x;
va_start(ap,fmt);a=va_arg(ap,char*);x=(a!=foo);va_end(ap);return x;}
int main(argc,argv)int argc;char**argv;{
exit(test("",foo));}]
, AC_DEFINE(HAVE_STDARG_H))dnl

AC_HAVE_HEADERS(stddef.h stdlib.h limits.h)
AC_HAVE_HEADERS(string.h memory.h unistd.h)
AC_DIR_HEADER
AC_XENIX_DIR
AC_RETSIGTYPE
AC_SIZE_T
AC_TIME_WITH_SYS_TIME
AC_CONST
AC_LONG_FILE_NAMES
AC_HAVE_FUNCS(strerror getpgrp tcgetpgrp seteuid setreuid setresuid strftime)
AC_HAVE_FUNCS(strcasecmp)

dnl
dnl	Test to see if getpgrp() or getpgrp(0) should be used to
dnl	discover the process group of the current process.
dnl
echo checking for appropriate getpgrp argument
AC_TEST_PROGRAM([
int main(argc, argv) int argc; char **argv; {
#ifdef HAVE_GETPGRP
if (getpgrp(32767) == getpgrp(0)) exit(2);
#endif
exit(0); }]
, AC_DEFINE(CONF_getpgrp_arg, 0), AC_DEFINE(CONF_getpgrp_arg, []))dnl

dnl
dnl	Test to see if the pw_comment field exists in
dnl	the passwd struct defined in the <pwd.h> include file.
dnl
AC_COMPILE_CHECK([pw_comment in struct passwd],
[#include <pwd.h>], [struct passwd *pw;
pw = getpwnam("root"); printf("%s\n", pw->pw_comment);],
AC_DEFINE(HAVE_pw_comment))dnl

dnl
dnl	Test to see if the tm_zone field exists in
dnl	the passwd tm defined in the <time.h> include file.
dnl
AC_COMPILE_CHECK([tm_zone in struct tm], [
#ifdef TIME_WITH_SYS_TIME
#include <sys/time.h>
#include <time.h>
#else
#ifdef HAVE_SYS_TIME_H
#include <sys/time.h>
#else
#include <time.h>
#endif
#endif], [struct tm *tm;
printf("%s\n", tm->tm_zone);],
AC_DEFINE(HAVE_tm_zone))dnl

dnl
dnl	Test to find a Bourne shell which understands functions
dnl
echo checking for a Bourne shell which understands functions
if test "z$SH" = "z"; then
    if test -f /bin/sh5; then
	SH=/bin/sh5
    else
	SH=/bin/sh
    fi
fi
AC_SUBST(SH)
AC_DEFINE_UNQUOTED(CONF_SHELL, [\"$SH\"])

dnl
dnl	See if there is already existing library files
dnl	Use uid/gid if so, otherwise use 3/3
dnl
changequote(,)dnl
AEGIS_UID=3
AEGIS_GID=3
if test -d ${prefix-/usr/local}/lib/aegis ; then
	echo "checking for owner of existing aegis library files"
	cat > conftest.c << 'EOF'
#include <sys/types.h>
#include <sys/stat.h>
main(ac,av)int ac; char **av;{struct stat st;
if (stat(av[1],&st)!=0)exit(1);
printf("%d\n", ac>2?st.st_gid:st.st_uid);exit(0);}
EOF
	if eval $compile; then
		if maybe=`./conftest ${prefix-/usr/local}/lib/aegis`; then
			AEGIS_UID=$maybe
		fi
		if maybe=`./conftest ${prefix-/usr/local}/lib/aegis gid`; then
			AEGIS_GID=$maybe
		fi
	fi
	rm -f conftest*
	test -n "$verbose" && echo "	setting AEGIS_UID to be $AEGIS_UID"
	test -n "$verbose" && echo "	setting AEGIS_GID to be $AEGIS_GID"
fi
changequote([,])dnl
AC_SUBST(AEGIS_UID)
AC_SUBST(AEGIS_GID)

dnl
dnl	Test to see if enums are the same size as ints
dnl
echo checking for enums of int size
AC_TEST_PROGRAM([
int main(argc, argv) int argc; char **argv; {
enum foo { bar, baz } fubar;
exit(sizeof(fubar) != sizeof(int));
}], AC_DEFINE(CONF_enum_is_int))dnl

AC_OUTPUT(Makefile aux/Howto.conf)
