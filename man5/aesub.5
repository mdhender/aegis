'\" t
.\"	aegis - project change supervisor
.\"	Copyright (C) 1993, 1994, 1995 Peter Miller;
.\"	All rights reserved.
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\"
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\"
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\"
.\" MANIFEST: manual page describing command substitutions
.\"
.so z_name.so
.TH aesub 5 \*(N)
.if n .ad l
.if n .hy 0
.SH NAME
aesub \- available command substitutions
.SH DESCRIPTION
When other programs are invoked by the
.I aegis
program,
it is usually via a command string in a configuration file.
This section describes the format of these command strings.
.SH GENERAL FORM
The command strings are very similar to shell variables.
An example will illustrate this:
.RS 8n
.nf
build_command =
	"cook project=${project} change=${change}";
.fi
.RE
In this command definition,
the "${project}" part is a substitution:
the name of the project will be substituted
in the command at this point.
.PP
Substitutions may take several forms:
.TP 8n
$name
.br
This is the same as saying "${name}".
The name must start with an alphabetic,
and be followed by zero or more alphanumerics.
.TP 8n
${name}
.br
The name in this form may contain any non-blank characters,
and it may be subject to substitution.
.TP 8n
${name \fIarg\fP...}
.br
The name and the arguments in this form may contain any non-blank characters,
and it may be subject to further substitution.
.TP 8n
$$
.br
This is replaced by a single $ character.
.PP
As another example,
the
.I dirname
substitution is replaced by the directory name of the argument,
rather like the
.IR dirname (1)
command.
In the command
.RS
.nf
history_query_command =
	"get -t -g ${Dirname $History}/s.${Basename $History}";
.fi
.RE
the
.I Dirname
and
.I Basename
substitutions are used to construct a suitable path to the SCCS
file in the history directory.
.SH ABBREVIATIONS
The names of the various substitutions may be abbreviated.
In the above examples,
and in the lists which follow,
the minimum abbreviation is the uppercase letters.
All substitution name are case insensitive.
.PP
The above example could be abbreviated to
.RS
.nf
history_query_command =
	"get -t -g ${d $h}/s.${b $h}";
.fi
.RE
.PP
Ambiguous abbreviations will result in a fatal error message.
.SH SUBSTITUTIONS
There are many substitutions which are always understood,
and some which are specific to the command being substituted.
Specific entries will be defined in the relevant manual section.
.PP
The following lists contains those substitutions which are always understood:
.\" -------------------- A --------------------
.TP 8n
Administrator_List
.br
Space separated list of the project's administrators.
.TP 8n
ARCHitecture
.br
This substitution is replaced by the architecture name
appropriate for the current execution environment.
Requires no arguments.
See the
.I architecture
field of
.IR aepconf (5)
for more information.
.\" -------------------- B --------------------
.TP 8n
BaseLine
.br
Absolute path of the the project's baseline.
.TP 8n
Basename
.br
This substitution takes one argument,
a pathname.
The value of the substitution will be the last element of the pathname.
This is similar to the
.IR basename (1)
command.
.\" -------------------- C --------------------
.TP 8n
Change
.br
The change number.
.TP 8n
Copyright_Years
.br
Inserts a comma separated list of copyright years from the project attributes.
This list of years is maintained by
.I aegis
at integrate begin,
and so is only guaranteed to be up-to-date
in the'\fIbeing integrated\fP' state.
Do not use this substitution in new file templates,
it is not guaranteed to be up-to-date in the '\fIbeing developed\fP' state;
use the ${date %Y} substitution in new file templates.
.\" -------------------- D --------------------
.TP 8n
DAte
.br
With no arguments,
the output is the current date.
If there are arguments,
they forma format string.
This is similar to the
.IR date (1)
command on many UNIX systems.
For a description of the date formats,
see the
.I DATE
section,
below.
.TP 8n
DELta
.br
The delta number of the change.
This is only available when the change is in the
.I "being integrated"
state or the
.I completed
state.
.TP 8n
DEVeloper
.br
The name of the developer.
.TP 8n
DEVeloper_List
.br
Space separated list of the project's developers.
.TP 8n
Development_Directory
.br
The absolute path of the change's development directory.
Only available when the change is between the
.I "being developed"
state and the
.I "being integrated"
state.
.TP 8n
Dirname
.br
This substitution takes one argument,
a pathname.
The value of the substitution will be everything but
the last element of the pathname.
This is similar to the
.IR dirname (1)
command.
.TP 8n
DownCase
.br
This substitution takes one argument.
The value of the substitution will be the argument with
any upper case letters mapped to lower case.
.\" -------------------- E --------------------
.\" -------------------- F --------------------
.\" -------------------- G --------------------
.\" -------------------- H --------------------
.\" -------------------- I --------------------
.TP 8n
IDentifier
.br
This substitution takes one argument.
The value of the substitution will be the argument with
all characters but alpha numerics mapped into an underscore (_),
so as to form a legal C identifier.
.TP 8n
INTegration_Directory
.br
The absolute path of the change's integration directory.
Only available when the change is in the
.I "being integrated"
state.
.TP 8n
INTegrator
.br
The name of the change's integrator.
Only available when the change is in the
.I "being integrated"
state or the
.I "completed"
state.
.TP 8n
INTegrator_List
.br
Space separated list of the project's integrators.
.\" -------------------- J --------------------
.\" -------------------- K --------------------
.\" -------------------- L --------------------
.TP 8n
LIBrary
.br
The absolute path of aegis' library directory.
.\" -------------------- M --------------------
.\" -------------------- N --------------------
.\" -------------------- O --------------------
.\" -------------------- P --------------------
.TP 8n
Project
.br
The name of the project.
.\" -------------------- Q --------------------
.\" -------------------- R --------------------
.TP 8n
Read_File
.br
Read a file and substitute the contents of the file.
Requires exactly one argument, the pathname of the file to be read.
If the pathname is a project source file,
you will need to use the
.I source
substitution to resolve the path.
It is a fatal error if the file does not exist,
or is not readable.
It is a fatal error if the pathname is not absolute
(because the current directory is undefined).
.TP 8n
Reviewer
.br
The name of the change's reviewer.
Only available when the change is between the
.I "awaiting integration"
state and the
.I "completed"
state.
.TP 8n
Reviewer_List
.br
Space separated list of the project's reviewers.
.\" -------------------- S --------------------
.TP 8n
SHell
.br
The absolute path of a Bourne shell
which understands functions.
Requires exactly zero arguments.
.TP 8n
Source
.br
Resolve the argument filename into a pathname.
It is an error if the file is not a source file.
An optional second argument may be "Absolute" or "Relative",
and may be abbreviated.
Relative will attempt to provide a development-directory-relative pathname
whenever possible,
absolute will always result in an absolute path.
The default is "Relative".
.\" -------------------- T --------------------
.\" -------------------- U --------------------
.TP 8n
UpCase
.br
This substitution takes one argument.
The value of the substitution will be the argument with
any lower case letters mapped to upper case.
.\" -------------------- V --------------------
.TP 8n
Version
.br
The version of the change.
If the change is in the
.I "being integrated"
state or the
.I "completed"
state,
the version will be of the form "\fIa\fB.\fIb\fB.D\fIddd\fR",
where "a" is the project's major version number,
"b" is the project's minor version number, and
"ddd" is the change's delta number.
If the change is in any other state,
the version will be of the form "\fIa\fB.\fIb\fB.C\fIccc\fR",
where "ccc" is the change number.
.\" -------------------- W --------------------
.\" -------------------- X --------------------
.\" -------------------- Y --------------------
.\" -------------------- Z --------------------
.SH DATE
This section describes the format specifiers accepted by the
date substitution.
These are the same specifiers as defined
by the ANSI C standard
for the strftime function.
.TP 8n
%%
The percent character (%)
.TP 8n
%a
the abbreviated weekday name
.TP 8n
%A
the full weekday name
.TP 8n
%b
the abbreviated month name
.TP 8n
%B
the full month name
.TP 8n
%c
the date and time
.TP 8n
%d
the day of the month,
zero padded
.TP 8n
%H
the hour of the 24-hour day
.TP 8n
%I
the hour of the 12-hour day
.TP 8n
%j
the day number of year,
zero padded, one based
.TP 8n
%m
the month of the year,
zero padded, one based
.TP 8n
%M
the minute of the hour,
zero padded
.TP 8n
%p
meridian indicator,
AM or PM as appropriate
.TP 8n
%S
the second of the minute
.TP 8n
%U
the Sunday week of the year
.TP 8n
%w
the day of the week,
Sunday is 0
.TP 8n
%W
the Monday week of the year
.TP 8n
%x
the date,
as \fImmm dd yyyy\fP
.TP 8n
%X
the time,
as \fIhh:mm:ss\fP
.TP 8n
%y
the year of the century
.TP 8n
%Y
the year including the century
.TP 8n
%Z
time zone abbreviation
.PP
Using an undefined format specifier will
produce random results,
depending on the version of UNIX you are on.
.so ../man1/z_cr.so
