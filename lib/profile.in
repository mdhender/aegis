#
#	aegis - project change supervisor
#	Copyright (C) 1991, 1992, 1993, 1994, 1995, 1996, 1999 Peter Miller;
#	All rights reserved.
#
#	This program is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; either version 2 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
#
# MANIFEST: Bourne shell user config for aegis
#
# @configure_input@
#
# Please Note: this file will be over-written by the next installation
# of Aegis.  If you make local modifications, you will need to remember
# to make them again after the next upgrade.
#
# On Linux, or any system using bash (I think), a symlink to this file
# from /etc/profile.d/aegis.sh can be very useful.
#
if test -d $HOME/lib/aegis/.
then
	AEGIS_PATH=$HOME/lib/aegis
	export AEGIS_PATH
fi

#
# If the user has not set their preferred language, default it to
# English here.  This will give behaviour consistent with previous Aegis
# behaviour.
#
LANGUAGE=${LANGUAGE-en}
export LANGUAGE

#
# Set the MANPATH environment variable to include the Aegis' library
# directory.  This directory contains subdirectories for each of the
# supported languages, structured in such a way that man(1) programs
# which understand the $LANGUAGE environment variable will be able to find
# manual pages in the user's preferred language.
#
if [ "${MANPATH-no}" = "no" ]; then
	if [ "`uname`" = "Linux" ]; then
		MANPATH=`man -w`
	else
		MANPATH=/usr/man
	fi
fi
MANPATH=${MANPATH}:@mandir@:@datadir@
export MANPATH

#
# Set the AEGIS_AUTOMOUNT_POINTS environment variable to the names
# of the directories which the automounter uses to temporarily mount
# file systems.  Use with extreme caution as this distorts Aegis' idea
# of the shape of the filesystem.
#
#	/tmp_mnt is typical of Sun automounters
#	/a is the default for amd, an OpenSource automounter
#	/.automount is typical of amd on Linux
#
# The automounters need to be configured so that the path below the
# automount point is *identical* to the path without it - because all
# Aegis tries to do is remove the automount prefix *if* the file
# stat()s the same with and without it.  This is the default for the
# Sun automounter, but not typical in the examples in the amd user guide.
#
AEGIS_AUTOMOUNT_POINTS="/tmp_mnt:/a:/.automount"
export AEGIS_AUTOMOUNT_POINTS

#
# Each of the Aegis commands has its own alias This is essential for
# aecd, and convenient for the others.  (Splitting Aegis into many
# commands is only efficient if the target system has shared libraries,
# because the size of the common code portion usually greatly exceeds
# the size of the unique portions.)
#
aeb()
{
	aegis -b $* -v
}
aeca()
{
	aegis -ca $* -v
}
aecd()
{
	cd `aegis -cd $* -v`
}
aechown()
{
	aegis -chown $* -v
}
aeclean()
{
	aegis -clean $* -v
}
aeclone()
{
	aegis -clone $* -v
}
aecp()
{
	aegis -cp $* -v
}
aecpu()
{
	aegis -cpu $* -v
}
aed()
{
	aegis -diff $* -v
}
aedb()
{
	aegis -db $* -v
}
aedbu()
{
	aegis -dbu $* -v
}
aede()
{
	aegis -de $* -v
}
aedeu()
{
	aegis -deu $* -v
}
aedless()
{
	less `find . -type f \( -name "*,D" -o -name ".*,D" \) -print | sort`
}
aedmore()
{
	more `find . -type f \( -name "*,D" -o -name ".*,D" \) -print | sort`
}
aedn()
{
	aegis -dn $* -v
}
aeib()
{
	aegis -ib $* -v
}
aeibu()
{
	aegis -ibu $* -v
}
aeifail()
{
	aegis -ifail $* -v
}
aeipass()
{
	aegis -ipass $* -v
}
ael()
{
	aegis -l $* -v
}
aem()
{
	aegis -diff -only_merge $* -v
}
aemv()
{
	aegis -mv $* -v
}
aena()
{
	aegis -na $* -v
}
aenbr()
{
	aegis -nbr $* -v
}
aenbru()
{
	aegis -nbru $* -v
}
aenc()
{
	aegis -nc $* -v
}
aencu()
{
	aegis -ncu $* -v
}
aend()
{
	aegis -nd $* -v
}
aenf()
{
	aegis -nf $* -v
}
aenfu()
{
	aegis -nfu $* -v
}
aeni()
{
	aegis -ni $* -v
}
aenpa()
{
	aegis -new-project-alias $* -v
}
aenpr()
{
	aegis -npr $* -v
}
aenrls()
{
	aegis -nrls $* -v
}
aenrv()
{
	aegis -nrv $* -v
}
aent()
{
	aegis -nt $* -v
}
aentu()
{
	aegis -ntu $* -v
}
aepa()
{
	aegis -pa $* -v
}
aeq()
{
	aegis -q $* -v
}
aer()
{
	aereport $* -v
}
aera()
{
	aegis -ra $* -v
}
aerd()
{
	aegis -rd $* -v
}
aerfail()
{
	aegis -rfail $* -v
}
aeri()
{
	aegis -ri $* -v
}
aerm()
{
	aegis -rm $* -v
}
aermu()
{
	aegis -rmu $* -v
}
aerpass()
{
	aegis -rpass $* -v
}
aerpa()
{
	aegis -remove-project-alias $* -v
}
aerpu()
{
	aegis -rpu $* -v
}
aermpr()
{
	aegis -rmpr $* -v
}
aerrv()
{
	aegis -rrv $* -v
}
aet()
{
	aegis -t $* -v
}

ae_c()
{
	AEGIS_CHANGE="$1"
	export AEGIS_CHANGE
}
ae_p()
{
	AEGIS_PROJECT="$1"
	export AEGIS_PROJECT
}
