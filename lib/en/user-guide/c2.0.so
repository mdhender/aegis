.\"
.\"     aegis - project change supervisor
.\"     Copyright (C) 1991-1994, 1998, 1999, 2006-2008, 2010, 2012 Peter Miller
.\"
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under the terms of the GNU General Public License as published by
.\"     the Free Software Foundation; either version 3 of the License, or
.\"     (at your option) any later version.
.\"
.\"     This program is distributed in the hope that it will be useful,
.\"     but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License for more details.
.\"
.\"     You should have received a copy of the GNU General Public License
.\"     along with this program. If not, see
.\"     <http://www.gnu.org/licenses/>.
.\"
.bp
.if t .2C
.nh 1 "The Change Development Cycle"
.LP
As a change to a project is developed using Aegis,
it passes through several states.
Each state is characterized by different quality requirements,
different sets of applicable Aegis commands, and
different responsibilities for the people involved.
.LP
These people may be divided into four categories:
developers, reviewers, integrators and administrators.
Each has different responsibilities, duties and permissions;
although one person may belong to more than one category,
depending on how a project is administered.
.LP
This chapter looks at each of these categories,
by way of an example project undergoing its first four changes.
This example will be examined from the perspective of each category
of people
in the following sections.
.LP
There are six hypothetical users in the example:
the developers are Pat, Jan and Sam;
the reviewers are Robyn and Jan;
the integrator is Isa; and
the administrator is Alex\**.
.FS
The names are deliberately gender\[hy]neutral.
Finding such a name starting with "I" is not easy!
.FE
There need not have been this many people involved,
but it keeps things slightly cleaner for this example.
.LP
The project is called "example".
It implements a very simple calculator.
Many features important to a quality product are missing,
checking for divide\[hy]by\[hy]zero for example.
These have been omitted for brevity.
.bp
.if t .1C
.so lib/en/user-guide/c2.1.so
.so lib/en/user-guide/c2.2.so
.so lib/en/user-guide/c2.3.so
.so lib/en/user-guide/c2.4.so
.bp
.if t .2C
.so lib/en/user-guide/c2.5.so
.so lib/en/user-guide/c2.6.so
.\" vim: set ts=8 sw=4 et :
