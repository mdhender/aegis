/*
 *	aegis - project change supervisor
 *	Copyright (C) 1997, 1998, 2000-2003, 2005-2007 Peter Miller
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this program. If not, see
 *	<http://www.gnu.org/licenses/>.
 */

auto script_name;
script_name = getenv("SCRIPT_NAME");
if (script_name == "")
	script_name = "http://localhost/cgi-bin/aegis.cgi";
auto pn;
pn = project_name();
auto cn;
cn = change_number();
auto href;
href = script_name ## "?file@proj_menu+project@" ## quote_url(pn);

columns({width = 1000; });
print("Content-Type: text/html");
print("");
print("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\""
	## "\"http://www.w3.org/TR/REC-html40/loose.dtd\">");
print("<html><head>");
print("<meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\">");
print("<meta name=\"GENERATOR\" content=\"" ## script_name ## "\">");
print("<meta http-equiv=\"Content-Type\" "
	## "content=\"text/html; charset=ISO-8859-1\">");
print("<style type=\"text/css\"> "
	## "tr.even-group { background-color: #CCCCCC; } "
	## "body { background-color: white; } "
	## "</style>");
/*
 * Netscape 4.x has numerous CSS bugs, two of which need mentioning.
 * 1. If a style sheet is not present Netscape says 404 Not found, when
 * it should silently ignore it.  2. Style sheets who's media is not
 * "screen" will be ignored.  Fortunately we can use (2) to get around (1).
 */
print("<link rel=\"stylesheet\" type=\"text/css\" href=\"/aedefault.css\" "
	## "media=\"all\">");
auto stack, depth, n;
depth=0;
stack[depth] = project[pn].state.name;
while ("" != ( n = project[stack[depth]].state.parent_name )) {
  stack[++depth] = n;
}
while ( depth >= 0) {
    print("<link rel=\"stylesheet\" type=\"text/css\" href=\"/" ##
      stack[depth--] ## ".css\" " ## "media=\"all\">");
}

print("<title>");
print("Project " ## quote_html(pn) ## ", Change " ## cn ## ", History Report");
print("</title></head><body><h1 align=center>");

print("<a href=\"" ## script_name ## "\">Project</a>");
auto long_project_name;
auto prj_name_parts;
prj_name_parts = split(pn, '.');
href = script_name ## "?file@proj_menu+project@"
	## quote_url(prj_name_parts[0]);
long_project_name = "<a href=\"" ## href ## "\" >"
	## quote_html(prj_name_parts[0]) ## "</a>";
auto j;
for (j = 1; j < count(prj_name_parts); j++)
{
    href ##= '.' ## prj_name_parts[j];
    long_project_name ##= ".<a href=\"" ## href ## "\" >"
    	## quote_html(prj_name_parts[j]) ## "</a>";
};
long_project_name = "&ldquo;" ## long_project_name ## "&rdquo;,";
/* HTTP limits lines to 510 characters */
for (j in wrap(long_project_name, 510))
    print(j);

href = script_name ## "?file@chan_menu+project@" ## quote_url(pn)
        ## "+change@" ## cn;
print("Change <a href=\"" ## href ## "\">" ## cn ## "</a>,");
print("<br>History");
print("</h1>");
print("<div class=\"information\">");

auto ps, cs;
ps = project[project_name()].state;
cs = ps.branch.change[cn];

/*
 * scan all completed changes
 * for any of the named files
 */
print("<table align=center>");
print("<tr class=\"even-group\"><th>What</th><th>When</th><th>Who</th>"
	## "<th>Comment</th></tr>");
auto rownum;
rownum = 0;
for (j in keys(cs.history))
{
    auto ch;
    ch = cs.history[j];
    if (rownum++ % 6 < 3)
	print("<tr class=\"odd-group\">");
    else
	print("<tr class=\"even-group\">");
    print("<td valign=top>");
    print(ch.what);
    print("</td><td valign=top>");
    print(ch.when);
    print("</td><td valign=top align=right>");
    auto email, long_name;
    email = ch.who;
    try { email = user[ch.who].email_address; }
    catch (email) { email = ""; }
    if (email == "")
       	email = ch.who;
    href = "mailto:" ## email;
    print("<a href=\"" ## href ## "\">");
    long_name = ch.who;
    try { long_name = passwd[ch.who].pw_comment; }
    catch (long_name) { long_name = ch.who; }
    print(quote_html(long_name) ## "</a>");
    print("</td><td valign=top>");

    auto part;
    for (part in wrap_html(quote_html(ch.why), 80))
       	print(part);

    auto t;
    if (j == count(cs.history) - 1)
       	t = now();
    else
       	t = cs.history[j + 1].when;
    t = working_days(ch.when, t);
    if (t >= 0.1)
    {
       	if (ch.why != "")
	    print("<br>");
       	print("Elapsed: " ## sprintf("%5.3f", t) ## " working days.");
    }
    print("</td></tr>");
}
print("<tr><td colspan=4>");
print("Listed " ## count(cs.history) ## " state transitions.");
print("</td></tr>");
print("</table>");
print("</div>");

print("<hr>");
print("<div class=\"report-cmd\">");
print("A similar report may be obtained from the command line, with one of");
print("<blockquote><pre>ael change_history -p " ## quote_html(project_name()) ##
    " -c " ## cn);
print("aer change_history -p " ## quote_html(project_name()) ##
    " -c " ## cn ## "</pre></blockquote>");
print("</div>");
print("<hr>");

print("<p align=center class=\"navbar\">[");
print("<a href=\"" ## script_name ## "\">Project List</a> |");
href = script_name ## "?file@proj_menu+project@" ## quote_url(pn);
print("<a href=\"" ## href ## "\">Project Menu</a> |");
href = script_name ## "?file@changes+project@" ## quote_url(pn);
print("<a href=\"" ## href ## "\">Change List</a> |");
href = script_name ## "?file@chan_menu+project@" ## quote_url(pn)
	## "+change@" ## cn ;
print("<a href=\"" ## href ## "\">Change Menu</a>");
print("]</p>");

print("<hr>");
print("This page was generated " ## now() ## ".");
print("</body></html>");
