/*
 *	aegis - project change supervisor
 *	Copyright (C) 1997 Peter Miller;
 *	All rights reserved.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this program; if not, write to the Free Software
 *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 *
 * MANIFEST: report the history of files
 */

auto script_name;
script_name = getenv("SCRIPT_NAME");
if (script_name == "")
	script_name = "http://localhost/cgi-bin/aegis.cgi";

columns({width = 1000;});
print("Content-Type: text/html");
print("");
print("<html><head><title>");
print("File History Report");
print("</title></head><body><h1><center>");
print("Project ``" ## project_name() ## "'',");
if (change_number_set())
	print("Change " ## change_number() ## ",");
if (count(arg) == 1)
	print("File ``" ## arg[0] ## "'',");
print("<br>File History");
print("</center></h1>");

print("<dl>");

auto ps;
ps = project[project_name()].state;

/*
 * use the files named on the command line,
 * or all project files if not specified
 */
auto file, cs;
if (count(arg) == 0)
{
	if (change_number_set())
	{
		cs = ps.branch.change[change_number()];
		for (file in cs.src)
			arg ##= file.file_name;
	}
	else
	{
		for (file in ps.src)
			arg ##= file.file_name;
	}
}

/*
 * create an empty history for each file
 */
auto hist;
for (file in arg)
	hist[file] = [];

/*
 * scan all completed changes
 * for any of the named files
 */
auto ph, cf;
for (ph in ps.branch.history)
{
	cs = ps.branch.change[ph.change_number];
	for (cf in cs.src)
	{
		if (cf.file_name in arg)
		{
			if (cf.usage == build && cf.action == modify)
				continue;
			hist[cf.file_name] ##=
				{
					usage = cf.usage;
					action = cf.action;
					edit = cf.edit_number;
					delta = ph.delta_number;
					when = cs.history[count(cs.history) - 1].when;
					change = ph.change_number;
					description = cs.brief_description;
					move = cf.move;
				};
		}
	}
}

/*
 * print the accumulated history
 */
auto fh, actions, usages;
for (file in sort(keys(hist)))
{
	auto href;
	href = script_name ## "?file@file_menu+" ## file;
	href ##= "+project@" ## project_name();

	print("<dt>");
	print("<a href=\"" ## href ## "\">");
	print("<tt>" ## file ## "</tt></a>");
	print("<dd>");

	print("<table>");
	print("<tr><th>Type</th><th>Action</th><th>Delta</th><th>When</th>");
	print("<th>Change</th><th>Edit</th><th>Description</th></tr>");

	actions = "BS";
	usages = "BS";
	for (fh in hist[file])
	{
		print("<tr><td valign=top>");
		if (fh.usage != usages)
			print(fh.usage);
		print("</td><td valign=top>");
		if (fh.action != actions)
			print(fh.action);
		print("</td><td valign=top align=right>");
		print(fh.delta);
		print("</td><td valign=top>");
		print(fh.when);
		print("</td><td valign=top align=right>");
		href = script_name ## "?file@chan_menu";
		href ##= "+project@" ## project_name();
		href ##= "+change@" ## fh.change;
		print("<a href=\"" ## href ## "\">");
		print(fh.change ## "</a>");
		print("</td><td valign=top align=right>");
		print(fh.edit);
		print("</td><td valign=top>");
		print(fh.description);
		if (fh.move != "")
		{
			href = script_name ## "?file@file_menu+" ## fh.move;
			href ##= "+project@" ## project_name();

			print("<br>Moved");
			if (fh.action == create)
				print("from");
			else
				print("to");
			print("<a href=\"" ## href ## "\">");
			print("<tt>" ## fh.move ## "</tt></a>");
		}
		print("</td></tr>");
		actions = fh.action;
		usages = fh.usage;
	}
	print("</table>");
}
print("</dl>");
print("Listed " ## count(keys(hist)) ## " files.");
print("<hr>");
print("A similar report may be obtained from the command line, with");
print("<blockquote><tt>aer file_history [ <i>filename</i> ] -p " ##
	project_name() ## "</tt></blockquote>");
print("<hr>");
print("This page was generated " ## now() ## ".");
print("</body></html>");
