/*
 *	aegis - project change supervisor
 *	Copyright (C) 1997, 1998, 2002, 2003, 2005 Peter Miller;
 *	All rights reserved.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this program; if not, write to the Free Software
 *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 *
 * MANIFEST: report the changes in a month
 */

auto pn, p;
pn = project_name();

auto script_name;
script_name = getenv("SCRIPT_NAME");
if (script_name == "")
	script_name = "http://localhost/cgi-bin/aegis.cgi";


auto ps, cs;
ps = project[project_name()].state;
auto ph, when, n, max, href;

auto t, month, year;
if (count(arg) > 0)
	t = mktime(arg[0]);
else
	t = now();
month = 0 + strftime("%m", t);
year = 0 + strftime("%Y", t);

columns({width = 1000; });
print("Content-Type: text/html");
print("");
print("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"");
print("                      \"http://www.w3.org/TR/REC-html40/loose.dtd\">");

print("<html><head>");
print("<meta name=\"ROBOTS\" content=\"NOINDEX, NOFOLLOW\">");
print("<meta name=\"GENERATOR\" content=\"" ## script_name ## "\">");
print("<meta http-equiv=\"Content-Type\" "
	## "content=\"text/html; charset=ISO-8859-1\">");
print("<style type=\"text/css\"> "
	## "tr.even-group { background-color: #CCCCCC; }"
	## "body { background-color: white; }"
	## "</style>");
/*
 * Netscape 4.x has numerous CSS bugs, two of which need mentioning.
 * 1. If a style sheet is not present Netscape says 404 Not found, when
 * it should silently ignore it.  2. Style sheets who's media is not
 * "screen" will be ignored.  Fortunately we can use (2) to get around (1).
 */
print("<link rel=\"stylesheet\" type=\"text/css\" href=\"/aedefault.css\" "
	## "media=\"all\">");
auto stack, depth, bn;
depth=0;
stack[depth] = project[pn].state.name;
while ("" != ( bn = project[stack[depth]].state.parent_name )) {
  stack[++depth] = bn;
}
while ( depth >= 0) {
    print("<link rel=\"stylesheet\" type=\"text/css\" href=\"/" ##
      stack[depth--] ## ".css\" " ## "media=\"all\">");
}
print("<title>");
print("Project " ## quote_html(pn) ## ", Change Histogram");
print("</title><head><body><h1 align=center>");

print("<a href=\"" ## script_name ## "\">Project</a>");
auto long_project_name;
auto prj_name_parts;
prj_name_parts = split(pn, '.');
href = script_name ## "?file@proj_menu+project@"
	## quote_url(prj_name_parts[0]);
long_project_name = "<a href=\"" ## href ## "\" >"
	## quote_html(prj_name_parts[0]) ## "</a>";
auto j;
for (j = 1; j < count(prj_name_parts); j++)
{
    href ##= '.' ## prj_name_parts[j];
    long_project_name ##= ".<a href=\"" ## href ## "\" >"
    	## quote_html(prj_name_parts[j]) ## "</a>";
};
long_project_name = "&ldquo;" ## long_project_name ## "&rdquo;,<br>";
/* HTTP limits lines to 510 characters */
for (j in wrap(long_project_name, 510))
    print(j);

href = script_name ## "?file@proj_hstgm+project@" ## quote_url(pn);
print("Change <a href=\"" ## href ## "\">Histogram</a><br>");
print(strftime("%B", t));
href = script_name ## "?file@proj_hstg2+project@" ## quote_url(pn)
        ## "+" ## year;
print("<a href=\"" ## href ## "\">" ## strftime("%Y", t) ## "</a>");
print("</h1>");
print("<div class=\"information\">");

auto earliest_mday, latest_mday;

auto bucket, mday, last_mday;
bucket = {};
for (ph in ps.branch.history)
{
	cs = ps.branch.change[ph.change_number];
	when = cs.history[count(cs.history) - 1].when;
	if (year != 0 + strftime("%Y", when))
		continue;
	if (month != 0 + strftime("%m", when))
		continue;
	mday = 0 + strftime("%d", when);
	bucket[mday]++;
}

max = 1;
for (mday in keys(bucket))
{
	n = 0 + bucket[mday];
	if (n > max)
		max = n;
}
max = 400. / max;

last_mday = 28;
for (n = 28; n < 32; ++n)
{
	when = mktime(strftime("1-%b-%Y 00:00:00", t));
	when += (n - 1) * (24 * 60 * 60);
	if (strftime("%m", when) + 0 != month)
		break;
	last_mday = n;
}

print("<table align=center>");
print("<tr><th>Day</th><th>Count</th></tr>");
for (mday = 1; mday <= last_mday; ++mday)
{
	n = 0 + bucket[mday];
	print("<tr><td align=right>");
	print(mday);
	print("</td><td align=right>");
	print(n);
	print("</td><td>");
	if (n > 0)
	{
		n = round(n * max);
		if (n < 3)
			n = 3;
		href = script_name ## "?file@rect+" ## n ## "+12";
		print("<img src=\"" ## href ## "\" width="##n## " height=12>");
	}
	print("</td></tr>");
}

print("</table>");
print("</div>");

print("<hr>");
print("<p align=center class=\"navbar\">[");
print("<a href=\"" ## script_name ## "\">Project List</a> |");
href = script_name ## "?file@proj_menu+project@" ## quote_url(pn);
print("<a href=\"" ## href ## "\">Project Menu</a> |");
href = script_name ## "?file@changes+project@" ## quote_url(pn);
print("<a href=\"" ## href ## "\">Change List</a> |");
href = script_name ## "?file@proj_hstgm+project@" ## quote_url(pn);
print("<a href=\"" ## href ## "\">Project Histogram</a> |");
href = script_name ## "?file@proj_hstg2+project@" ## quote_url(pn)
	## "+" ## year;
print("<a href=\"" ## href ## "\">Year Histogram</a>");
print("]</p>");

print("<hr>");
print("This page was generated " ## now() ## ".");
print("</body></html>");
