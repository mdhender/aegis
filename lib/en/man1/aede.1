'\"tp
.\" aegis - project change supervisor
.\" Copyright (C) 1991-1999, 2001, 2002, 2004-2008, 2010, 2012 Peter Miller
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
.\" General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program. If not, see <http://www.gnu.org/licenses/>.
.\"
.so lib/en/man1/z_name.so
.TH "\*(n) \-Develop_End" 1 \*(N) "Reference Manual"
.SH NAME
aegis develop end \- complete development of a change
.XX "aede(1)" "complete development of a change"
.SH SYNOPSIS
.B \*(n)
.B \-Develop_End
[
.IR option ...
]
.br
.B \*(n)
.B \-Develop_End
.B \-List
[
.IR option ...
]
.br
.B \*(n)
.B \-Develop_End
.B \-Help
.SH DESCRIPTION
The
.I \*(n)
.I \-Develop_End
command is used to
notify \*(n) of the completion of the development of a change.
.PP
This command checks that you have successfully completed
an '\*(n) \-Build' command since any change source file was edited.
See
.IR aeb (1)
for more information.
.PP
This command checks that you have successfully completed
an '\*(n) \-DIFFerence' command since any change source file was edited.
See
.IR aed (1)
for more information.
.PP
This command checks that you have successfully completed
an '\*(n) \-Test' command
since the last successful build,
unless the change has a
.I test_exempt
attribute, or the build command is \f[CW]"exit 0"\fP.
This command checks that you have successfully completed
an '\*(n) \-Test \-BaseLine' command,
unless the change has a
.I test_baseline_exempt
attribute.
This command checks that you have successfully completed
an '\*(n) \-Test \-REGression' command,
unless the change has a
.I test_regression_exempt
attribute.
See
.IR aet (1)
and
.IR aecattr (5)
for more information.
.PP
If the change includes the project
configuration
file,
this command checks project file names,
to make sure they conform to the
.I maximum_filename_length
and
.I posix_filename_charset
field settings.
See
.IR aepconf (5)
for more information.
.PP
Successful execution of the command advances the change
from the
.I "being developed"
state to the
.I "being reviewed"
state, by default.
The \fIdevelop_\%end_\%action\fP project attribute controls which of
the following 3 paths are taken.
.\" ------------------------------------------------------------------------
.PS
boxwid = 1
down
S30: box invis "\fIdevelop_end_action:\fP" "\fIgoto_awaiting_review\fP"
S31: box "being" "developed"
arrow " develop" ljust " end" ljust
S32: box "awaiting" "review"
arrow " review" ljust " begin" ljust
S33: box "being" "reviewed"
arrow " review" ljust " pass" ljust
S34: box "awaiting" "integration"

S20: box invis "\fIdevelop_end_action:\fP" "\fIgoto_being_reviewed\fP" \
    with .w at S30.e+(0.5,0)
S21: box "being" "developed"
arrow " develop" ljust " end" ljust down 1.5
S22: box "being" "reviewed"
arrow " review" ljust " pass" ljust
S23: box "awaiting" "integration"
box invis "\fI(This is the default.)\fP"

S10: box invis "\fIdevelop_end_action:\fP" "\fIgoto_awaiting_integration\fP" \
    with .w at S20.e+(0.5,0)
S11: box "being" "developed"
arrow " develop" ljust " end" ljust down 2.5
S12: box "awaiting" "integration"
.PE
.\" ------------------------------------------------------------------------
\fBPlease Note:\fP the third alternative, skipping reviews altogether,
should only be used for single person projects.
All self\[hy]respecting commercial enterprise will avoid this alternative.
.PP
Because branches may extend for many months or even years, it is common
for the user who initiated the branch to be no longer with the project,
or even the company.  For this reason, project administrators may end the
development of branches.  For normal changes in this situation, use the
.IR aechown (1)
command.
.PP
If the project configuration file has specified the presence of
\f[CW]Signed\[hy]off\[hy]by:\fP lines, a suitable line containing the current
user's email address will be appended to the change description.
.PP
The change is no longer considered assigned to the developer.
.SS Branches
If you get an error message telling you that you can't end a branch
because a file needs to be merged, see the Branching chapter of the
Aegis User Guide for more information.
.PP
While changes and branches are almost identical in the ways you manipulate
them within Aegis, actual file changes must always be done in a change.
Thus, it is necessary to create a new change on the branch and do a
cross\[hy]branch grandparent merge before you will be able to develop\[hy]end
a branch which is giving you this error.
.SS Notification
On successful completion of the command, the
\fIdevelop_\%end_\%notify_\%command\fP field of the project attributes
file is run, if set.  See \fIaepa\fP(1) and \fIaepattr\fP(5) for more
information.
.PP
If your project has configured the \fIdevelop_\%end_\%action\fP in the
project confifuration file to \fIgoto_\%awaiting_\%integration\fP then
the \fIreview_\%pass_\%notify_\%command\fP in the project attributes
file is run instead, if set.
.SH OPTIONS
The following options are understood:
.so lib/en/man1/o_change.so
.so lib/en/man1/o_help.so
.so lib/en/man1/o_list.so
.so lib/en/man1/o_project.so
.so lib/en/man1/o_reason2.so
.so lib/en/man1/o_sob.so
.so lib/en/man1/o_terse.so
.so lib/en/man1/o_verbose.so
.so lib/en/man1/o_wait.so
.so lib/en/man1/o__rules.so
.SH RECOMMENDED ALIAS
The recommended alias for this command is
.nf
.ta 8n 16n
csh%    alias aede '\*(n) \-de \e!* \-v'
sh$     aede(){\*(n) \-de "$@" \-v}
.fi
.SH ERRORS
It is an error if
the change is not assigned to the current user.
.br
It is an error if
The change is not in the
.I "being developed"
state.
.br
It is an error if
there has been no successful
.I "'\*(n) \-Build'"
command since a change file was last edited.
.br
It is an error if
there has been no successful
.I "'\*(n) \-DIFFerence'"
command since a change file was last edited.
.br
It is an error if
there has been no successful
.I "'\*(n) \-Test'"
command since a change file was last edited.
.br
It is an error if
there has been no successful
.I "'\*(n) \-Test \-BaseLine'"
command since a change file was last edited.
.PP
It is an error if
an read\[hy]only file is still copied into the change.
Read\[hy]only files are to insulate
a change from the baseline during development;
they must be removed before development may end.
.so lib/en/man1/z_exit.so
.br
.ne 1i
.SH SEE ALSO
.TP 8n
.IR aeb (1)
build a change
.TP 8n
.IR aeca (1)
list or modify attributes of a change
.TP 8n
.IR aed (1)
difference a change
.TP 8n
.IR aedb (1)
begin development of a change
.TP 8n
.IR aede\[hy]policy (1)
validate change set is ready to end
.TP 8n
.IR aedeu (1)
recall a change for further development
.TP 8n
.IR aerfail (1)
fail a change review
.TP 8n
.IR aerpass (1)
pass a change review
.TP 8n
.IR aet (1)
test a change
.TP 8n
.IR aepconf (5)
project configuration file format
.TP 8n
.IR aeuconf (5)
user configuration file format
.so lib/en/man1/z_cr.so
.\" vim: set ts=8 sw=4 et :
