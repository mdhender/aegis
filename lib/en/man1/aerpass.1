'\" tp
.\"	aegis - project change supervisor
.\"	Copyright (C) 1991-2005 Peter Miller;
.\"	All rights reserved.
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\"
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\"
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
.\"
.\" MANIFEST: manual entry for the 'aegis -Review_PASS' command
.\"
.so z_name.so
.TH "\*(n) -Review_PASS" 1 \*(N) "Reference Manual"
.SH NAME
\*(n) -Review_PASS \- pass a change review
.XX "aerpass(1)" "pass a change review"
.SH SYNOPSIS
.B \*(n)
.B -Review_PASS
[
.IR option ...
]
.br
.B \*(n)
.B -Review_PASS
.B -List
[
.IR option ...
]
.br
.B \*(n)
.B -Review_PASS
.B -Help
.SH DESCRIPTION
The
.I \*(n)
.I -Review_PASS
command is used to
notify \*(n) that a change has passed review.
.PP
The default configuration requires only a single reviewer for each
change set.  It is possible to have more than one reviewer, and/or
project specific policies about who may review certain files, by
configuring Aegis to use an external review policy command.
.PP
The state transition performed depends on the settings of
the \f[CW]review_\%policy_\%command\fP field of the project configuration
file and the \f[CW]develop_\%end_\%action\fP field of the project attributes.
.TP 4n
\f[CW]review_policy_command\fP not set:
The change will be advanced from the
.I "being reviewed"
state to the
.I "awaiting integration"
state.
.TP 4n
\f[CW]review_policy_command\fP set:
.RS
The command will be executed, and the exit status examined.
.TP 4n
Zero:
The change will be advanced from the
.I "being reviewed"
state to the
.I "awaiting integration"
state.
.TP 8n
Non-Zero:
.RS
The setting of the \f[CW]develop_\%end_\%action\fP of the project attributes
is examined:
.TP 4n
goto_awaiting_review:
The change will be advanced from the
.I "being reviewed"
state to the
.I "awaiting integration"
state.
.TP 4n
Otherwise:
The change will remain in the
.I "being reviewed"
state.
It is expected that a future \f[CW]review_\%policy_\%command\fP execution will
satisfy the project criteria and exit zero.
.RE
.RE
.\" ------------------------------------------------------------------------
.PS
boxwid = 1
down
S1: box "being" "reviewed"
arrow " review" ljust " pass" ljust
S2: box "awaiting" "integration"
.\" mark time:
S3: box "being" "reviewed" with .w at S1.e+(0.5,0)
T7: spline -> from 2/3<S3.sw,S3.se> then down 1/2 then right 5/6 \
	then up 1.5 then left 5/6 then to 2/3<S3.nw,S3.ne>
"review " rjust "pass " rjust at S3.e+(0.5,0)
.\" backtrack:
S4: box "being" "reviewed" with .w at S3.e+(1,0)
S5: box "awaiting" "review" with .s at S4.n+(0,0.5)
T8: spline -> from S4.e then right 1/2 then up 1 then to S5.e
"review " rjust "pass " rjust at S4.e+(0.5,0.5)
.PE
.\" ------------------------------------------------------------------------
.PP
It is possible to avoid the \fIbeing reviewed\fP state altogether by
setting the \fIdevelop_\%end_\%action\fP field of the project confituration
file to \fIgoto_\%awaiting_\%integration\fP.
.PP
If the project configuration file has specified the presence of
\f[CW]Signed-off-by:\fP lines, a suitable line containing the current
user's email address will be appended to the change description.
.PP
If you use one of the \-File, \-Edit or \-Reason options to add comments,
the file is to be in plain text, and it is recommended that you only use
a newline to terminate paragraphs (rather than to terminate lines) as
this will result in better formatting in the various listings.
.SS Notification
On successful completion of this command, the
\fIreview_\%pass_\%notify_\%command\fP field of the project
attributes is run, if set.  See \fIaepattr\fP(5) and \fIaepa\fP(1)
for more information.
.SH OPTIONS
The following options are understood:
.so o_change.so
.so o_edit.so
.so o_file.so
.so o_help.so
.so o_list.so
.so o_project.so
.so o_reason2.so
.so o_sob.so
.so o_terse.so
.so o_verbose.so
.so o_wait.so
.so o__rules.so
.SH RECOMMENDED ALIAS
The recommended alias for this command is
.nf
.ta 8n 16n
csh%	alias aerpass '\*(n) -rpass \e!* -v'
sh$	aerpass(){\*(n) -rpass "$@" -v}
.fi
.SH ERRORS
It is an error if
the change is not in the
.I "being reviewed"
state.
.br
It is an error if
the current user is not a reviewer of the project.
.br
Its is an error if
the current user developed the change and the project is configured to
disallow developers to review their own changes (default).
.so z_exit.so
.br
.ne 1i
.SH SEE ALSO
.TP 8n
.IR aecd (1)
change directory
.TP 8n
.IR aede (1)
complete development of a change
.TP 8n
.IR aedeu (1)
recall a change for further development
.TP 8n
.IR aeib (1)
begin integrating a change
.TP 8n
.IR aenrv (1)
add a reviewer to a project
.TP 8n
.IR aerfail (1)
fail review of a change
.TP 8n
.IR aerpu (1)
rescind a change review pass
.TP 8n
.IR aepconf (5)
project configuration file format
.TP 8n
.IR aeuconf (5)
user configuration file format
.so z_cr.so
