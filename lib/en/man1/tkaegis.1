'\" t
.\"	aegis - project change supervisor
.\"	Copyright (C) 1995, 1999 Graham Wheeler
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\"
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\"
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
.\"
.\" MANIFEST: manual page describing the tkaegis command.
.\"
.so z_name.so
.ds n) tkaegis
.TH "\*(n)" 1 \*(N) "Reference Manual" ""
.SH NAME
\*(n) \- GUI interface for Aegis, using TCL/TK
.XX "tkaegis(1)" "GUI interface for Aegis, using TCL/TK"
.SH SYNOPSIS
.B \*(n)
.SH DESCRIPTION
The
.I "\*(n)"
command is used to provide a GUI interface to Aegis.  Its use should be
self-evident to anyone familiar with Aegis.
.PP
There are some areas where \*(n) is still missing functionality; these
are primarily related to project and change attributes that are not yet
included in the dialogs, and also issues such as configuring the change
and history tools, the architectures, and so on.
.SH INSTALLATION
First, you will need Tcl/Tk installed, and will need to modify the
path in the first line of \*(n) to reflect the path of your Tk
wish interpreter.
Hopefully, the \fI./configure\fP script took care of this.
.PP
Next, you may need to modify some important
variables that occur immediately below these comments, to specify
the architecture, project base directory, and the editor you are
using (if you leave that blank, \*(n) will try to determine the
editor to use from the EDITOR environment variable; if that fails,
it will fall back to emacs or vi).
.SH NAVIGATION
When you run \*(n), a window will appear with a menu at the top.
The window is used to display the output of aegis commands and some
other feedback.  The menu will initially have only two items, Project
and Help.  At this stage the Help menu only has an About dialog box.
.PP
The Project menu will allow you to create new projects, select from
your existing projects, clear the contents of the feedback window,
or exit the program.  If you create a new project, a dialog box will
appear allowing you to enter the project name, directory, and initial
branch number.  When you press OK the project will be created and should
then appear in the Project menu.
.PP
If you select an existing project, a new option will be added to the
Project menu, allowing you to delete the project.  A Branch menu will
also appear.  This is similar to the Project menu, but allows you to
create, delete, or select project branches.
.PP
If you select a branch in the branch menu, a Role menu will appear.
This will allow you to choose the role that you will be playing, namely
one of administrator, developer, reviewer, or integrator.  \*(n) uses
your UNIX login name and the names of the roleplayers associated with
the project and branch, to determine which of the roles it will allow
you to choose.  If you create a new project, only the administrator role
will appear.
.PP
Selecting a role will put you in a `mode', which will determine what other
menus appear and what you can do next.  Each mode will now be described in
turn, by giving a brief description of the role-specific menu hierarchy.
Following the name of each menu item is the corresponding aegis command,
where applicable.
.SH ADMINISTRATOR MODE
In this mode, you can modify the staff and roles associated with the
branch, and create, remove, and change the attributes of change requests,
and view all the change requests.
.TP 4n
Admin:
.RS
.TP 8n
Edit Branch Attributes (aepa) -
Change the attributes for the branch
.RE
.TP 4n
Staff:
.RS
.TP 4n
Administrators:
.RS
.TP 8n
Add (aena) -
Add an administrator for the branch
.TP 8n
View (ael a) -
View the administrators for the branch
.TP 8n
Remove (aera) -
Remove an administrator for the branch
.RE
.TP 4n
Developers:
.RS
.TP 8n
Add (aend) -
Add a developer for the branch
.TP 8n
View (ael d) -
View the developers for the branch
.TP 8n
Remove (aerd) -
Remove a developer for the branch
.RE
.TP 4n
Reviewers:
.RS
.TP 8n
Add (aenrv) -
Add a reviewer for the branch
.TP 8n
View (ael r) -
View the reviewers for the branch
.TP 8n
Remove (aerrv) -
Remove a reviewer for the branch
.RE
.TP 4n
Integrators:
.RS
.TP 8n
Add (aeni) -
Add an integrator for the branch
.TP 8n
View (ael i) -
View the integrators for the branch
.TP 8n
Remove (aeri) -
Remove an integrator for the branch
.RE
.TP 4n
Change:
.RS
.TP 8n
Add New Change (aenc) -
Add a new change request
.TP 8n
New Change Undo (aencu) -
Undo the addition of a change request
.TP 8n
Edit Change Attributes (aeca) -
Modify the attributes of a change request
.TP 8n
View Changes (ael c) -
View the set of changes
.RE
.RE
.SH DEVELOPER MODE
This mode is used by developers.  When entering this mode, the Develop
menu will appear, but no others.  A change must be selected after which
the other menus will appear.  If there is only one change awaiting
development, this will be auto-selected.
.TP 4n
Develop:
.RS
.TP 8n
View Changes (ael c) -
View all the change requests
.TP 8n
Begin Change (aedb) -
Start work on a new change
.TP 8n
Continue Change -
Continue work on a change in development
.TP 8n
View Differences (aediff) -
Show all the diffs for this change
.TP 8n
Abort Change (aedbu) -
Abort working on the change
.TP 8n
End Change (aede) -
(Attempt to) end working on the change
.TP 8n
Resume Change (aedeu) -
Resume work on a change awaiting review
.RE
.TP 4n
File:
.RS
.TP 8n
Edit Files -
Allow files to be loaded into an editor
.TP 8n
Add New File (aenf) -
Add a new file to the project
.TP 8n
Discard New File (aenfu) -
Discard a newly added file
.TP 8n
Remove Existing File (aerm) -
Discard a previously existing file
.TP 8n
Restore Existing File (aermu) -
Undo discard of a previously existing file
.TP 8n
Change Existing File (aecp) -
Allow an existing file to be edited
.TP 8n
Undo Changes to Existing File (aecpu) -
Lose changes to an existing file
.RE
.TP 4n
Build:
.RS
.TP 8n
Build Project (aeb) -
Attempt to build the project
.RE
.TP 4n
Test:
.RS
.TP 8n
Add New Test Script (aent) -
Add a new test script to the project
.TP 8n
Discard New Test Script (aentu) -
Remove a new test script
.TP 8n
Run New Tests (aet) -
Run the new tests
.TP 8n
Run Regression Tests (aet -reg) -
Run the old tests
.TP 8n
Run Baseline Test (aet -bl) -
Run the baseline test
.RE
.SH REVIEWER MODE
In this mode you are able to review changes.
.TP 4n
Review:
.RS
.TP 8n
View Changes (ael c) -
View all the changes
.TP 8n
Begin Review (aerb) -
Start reviewing a change
.TP 8n
Abort Review (aerbu) -
Abort reviewing a change
.TP 8n
Pass (aerpass) -
Pass a change review
.TP 8n
Fail (aerfail) -
Fail a change review
.TP 8n
Undo Pass (aerpu) -
Undo a previously passed review
.RE
.SH INTEGRATOR MODE
In this mode you can perform integration activities.
.TP 4n
Integrate:
.RS
.TP 8n
View Changes (ael c) -
View all the changes
.TP 8n
Start Integration (aeib) -
Start integrating a change
.TP 8n
Resume Integration -
Resume an integration in progress
.TP 8n
Cancel Integration (aeibu) -
Cancel an integration
.TP 8n
View Differences (aediff) -
Show the file differences for the change
.TP 8n
Build (aeb) -
Build the project
.TP 8n
New Tests (aet) -
Run the new tests
.TP 8n
Baseline Test (aet -bl) -
Run the baseline test
.TP 8n
Regression Test (aet -reg) -
Run the regression tests
.TP 8n
Pass (aeipass) -
Pass the integration
.TP 8n
Fail (aeifail) -
Fail the integration
.RE
.SH SEE ALSO
.TP 8n
.IR tkaeca (1)
GUI interface for the \fIaeca\fP(1) command.
.TP 8n
.IR tkaenc (1)
GUI interface for the \fIaenc\fP(1) command.
.TP 8n
.IR tkaepa (1)
GUI interface for the \fIaepa\fP(1) command.
.SH COPYRIGHT
.so version.so
\*(n) version \*(v)
.br
Copyright \(co 1995, 1999 Graham Wheeler
.SH AUTHOR
Graham Wheeler <gram@cdsec.com>
.br
Citadel Data Security
