#
#	aegis - project change supervisor
#	Copyright (C) 1997, 2002 Peter Miller;
#	All rights reserved.
#
#	This program is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; either version 2 of the License, or
#	(at your option) any later version.
#
#	This program is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with this program; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
#
# MANIFEST: Bibliography of papers about Make
#
# A=The name of an author.
# B=Book title, if is a book
# C=City (place) of publication
# D=Date (Mmm YYYY)
# E=Editor (if B field *and* no A field)
# I=Issuer (Publisher)
# J=Journal title
# K=Keywords
# L=Label
# N=Journal Issue Number
# O=Other, usually last
# P=Page(s)
# Q=Same as author, put no a person
# R=Report Number
# S=Series Name
# T=Title (if book or journal, this is title of article)
# V=Volume number of journal or book
# X=annotation

%L feld78
%A Stuart I. Feldman
%T Make \- A Program for Maintaining Computer Programs
%I Bell Laboratories
%R Computing Science Technical Report 57
%D Aug 1978

%L feld79
%A Stuart I. Feldman
%T Make \- A Program for Maintaining Computer Programs
%J Software \- Practice and Experience
%V 9(4)
%P 255-265
%D 1979
%O [\fBYet To Obtain.\fP]

%L same95
%A J. Sametinger
%A S. Schiffer
%T Design and Implementation Aspects of an Experimental C++ Programming
Environment
%J Software \- Practice and Experience
%V 25(2)
%P 111-128
%D 1995
%O [\fBYet To Obtain.\fP]

%L fowl90
%A Glenn Fowler
%T A Case for make
%J Software \- Practice and Experience
%V 20(6)
%D 1990
%P 35-46
%O [\fBYet To Obtain.\fP]
%X Is this NMake?

%L olss89
%A Ronald A. Olsson
%A Gregory R. Whitehead
%T A Simple Technique for Automatic Recompilation in Modular Programming
Languages
%J Software \- Practice and Experience
%V 19(8)
%P 757-773
%D 1989
%O [\fBYet To Obtain.\fP]

%L wald84
%A Kim Walden
%T Automatic Generation of Make Dependencies
%J Software \- Practice and Experience
%N 14
%N 6
%P 575-585
%D Jun 1984
%O [\fBYet To Obtain.\fP]

%L feld88
%A Stuart I. Feldman
%T Evolution of Make
%J Proceedings of the International Workshop on Software Version and
Configuration Control
%D Jan 1988
%C Grassau, Germany
%P 413-416
%O [\fBYet To Obtain.\fP]

%L somo87
%A Zoltan Somogyi
%T Cake: a fifth generation version of make
%J Australian Unix Users Group Newsletter
%V 7(6)
%P 22-31
%D Apr 1987

%L somo88
%T Cake: a Fifth Generation version of make
%A Zoltan Somogyi
%I EUUG
%J EUUG Newsletter
%V 8(2)
%D 1988
%O [\fBYet To Obtain.\fP]

%L stal93
%A Richard M. Stallman
%A Roland McGrath
%T GNU Make: A Program for Directing Recompilation
%I Free Software Foundation, Inc.
%C Cambridge, Massachusetts, USA
%D Jul 1993

%L atri93
%Q Atria Software, Inc.
%T Comparison of ClearCase and RCS/make
%D Aug 1993
%C Natick Massachusetts
%O [\fBYet To Obtain.\fP]

%A A. Mahler
%A A. Lampen
%T An Integrated Toolset for Engineering Software Configurations
%J Proceedings of the Third ACM SIGSOFT '88 Symposium on Software
Development Environments
%P 191-220
%D Nov 1988
%O [\fBYet To Obtain.\fP]

%A A. Mahler
%A A. Lampen
%T An Integrated Toolset for Engineering Software Configurations
%J Published as SIGSOFT Software Engineering Notes
%D 1989
%V 13(5)
%O [\fBYet To Obtain.\fP]

%L hsei89
%A D. Hsieh
%T Generic Computer Aided Software Engineering (CASE) Databases Requirements
%J Proceedings of the Fifth International Conference on Data Engineering
%C Los Angeles, CA, USA
%D Feb 1989
%P 422-423
%Z Abstract:
%Z In the current Computer Aided Software Engineering
%Z (CASE), most software development activities can be
%Z automated with software tools to help the software
%Z developers and system integartors manage their software
%Z products and development environment. For example,
%Z UNIX/RCS and MAKE are among the most widely used tools
%Z in the UNIX community. Although these tools support
%Z specific software life cycle phases, software
%Z developers still need to take the output of one phase
%Z and manually input it to the next phase for further
%Z development. Even tools used within the same life cycle
%Z phase do not necessarily communicate with each other.
%Z 'Information Sharing' is extremely important for a
%Z software development environment to provide the
%Z transparent data access across various software life
%Z cycle phases and software tools efficiently. In this
%Z paper, generic requirements for a CASE database based
%Z on the study from a 'programming in the large'
%Z environment in Hewlett-Packard which involves the
%Z interaction of thousands of software developers and
%Z million lines of source code and other related design
%Z objects are presented.
%O [\fBYet To Obtain.\fP]

%L talb88
%A Steve Talbott
%T Managing Projects with Make
%I O'Reilly & Associates, Inc.
%S Nutshell Handbook
%C Newton, MA, USA
%D 1988
%X pages: 77
%O ISBN: 0-937175-04-8
%X LCCN: QA76.8.U65 T34 1988

%L talb91
%A Steve Talbott
%T Managing Projects with Make, 2nd Ed.
%I O'Reilly & Associates, Inc.
%S Nutshell
%C Newton, MA, USA
%D 1991
%O ISBN: 0-937175-18-8

%L beeb90a
%A Nelson H. F. Beebe
%T The Design of GMAKE \- An Extended Implementation of UNIX MAKE
%I Center for Scientific Computing, Department of Mathematics,
University of Utah
%C Salt Lake City, UT, USA
%X Pages: 32
%D Feb 1990
%O [\fBYet To Obtain.\fP]

%L beeb90b
%A Nelson H. F. Beebe
%T A User's Manual for GMAKE
%I Center for Scientific Computing, Department of Mathematics,
University of Utah
%C Salt Lake City, UT, USA
%D Feb 1990
%O [This is not GNU Make.]
%X Pages: 78
%O [\fBYet To Obtain.\fP]

%L beeb92
%A Nelson H. F. Beebe
%T Using MAKE for TeX Documents
%I Center for Scientific Computing, Department of Mathematics,
University of Utah
%C Salt Lake City, UT, USA
%D Apr 1992
%O [This is not GNU Make.]
%X Pages: 14
%O [\fBYet To Obtain.\fP]

%L dubo96
%A Paul DuBois
%T Software Portability with IMake, 2nd Ed.
%I O'Reilly & Associates, Inc.
%D 1996
%O ISBN: 1-56592-226-3
%X Pages: 390.
%O [\fBYet To Obtain.\fP]

%L tond94
%A Clovis Tondo
%T Mastering Make
%I Prentice-Hall
%D 1994
%O ISBN: 0-13121-906-5
%X Pages: 310.
%Z Abstract:
%Z Expanded in scope and improved in design, this revision of a
%Z bestselling guide to MAKE combines an easy-to-follow
%Z step-by-step tutorial approach to using the MAKE utility on DOS
%Z OS/2, and UNIX systems with concise reference material for both
%Z universal concepts and specific uses of the tool.
%O [\fBYet To Obtain.\fP]

%T Using Make for Unix
%Q Tech Ease Corporation
%I Prentice-Hall
%D 1996
%O ISBN: 0-13176-488-8
%X Pages: 108
%Z Abstract:
%Z Anyone who wants to tap the power of this useful UNIX utility
%Z will find all the essentials of MAKE in this one handy book. The
%Z authors describe how users, system administrators, and
%Z developers use MAKE in different ways. They show how to use MAKE
%Z with the UNIX Source Code Control System (SCCS) and explain
%Z concisely how to tap into the benefits of MAKE.
%O [\fBYet To Obtain.\fP]

%T Enhancing Make or Re-inventing a Rounder Wheel
%A Edward Hirgelt
%I USENIX
%J USENIX Summer Conference Proceedings
%D 1983
%O [\fBYet To Obtain.\fP]

%T Mm4 - Make with M4 for Maintaining Makefiles
%A Allen H. Brumm
%I USENIX
%J USENIX Summer Conference Proceedings
%D 1983
%O [\fBYet To Obtain.\fP]

%T Using Make Effectively
%A Robert E. Novak
%I USENIX
%J USENIX Summer Conference Proceedings
%D 1983
%O [\fBYet To Obtain.\fP]

%T The Fourth Generation Make
%A Glenn S. Fowler
%I USENIX
%J USENIX Summer Conference Proceedings
%D 1985
%O [\fBYet To Obtain.\fP]

%T Mk: a successor to make
%A Andrew G. Hume
%I USENIX
%J USENIX Summer Conference Proceedings
%D 1987
%P 445-457
%O [\fBYet To Obtain.\fP]

%T Design and Implimentation of Parallel Make
%A Erik H. Baalbergen
%I USENIX
%J Computing Systems
%V 1(2)
%D 1988
%O (This this PMake?)
%O [\fBYet To Obtain.\fP]

%T Make as a system Administration Tool
%A Bjorn Satdeva
%I Open Systems Conference Board
%J The Third Annual System Administartion, Networking and Security Conference
%D 1994
%O [\fBYet To Obtain.\fP]

%T Jam \- Make() Redux
%A Christopher Seiwald
%I USENIX
%J UNIX Applications Development Symposium
%D 1994
%O [\fBHave It, Yet To Read.\fP]

%T The Odin System Reference Manual
%A Geoffrey M. Clemm
%O URL: ftp://ftp.\%cs.\%colorado.\%edu/\%pub/\%distribs/\%odin/

%T BSD Make (PMake)
%A Adam de Boor
%D 1988
%I University of California, Berkeley
%C Berkeley, CA, USA
%O URL: ftp://sunsite.\%usc.\%edu/\%pub/\%linux/\%devel/\%make/\%pmake.*.tar.gz

%L mill90
%T Cook - A Program Construction Tool
%A Peter Miller
%D 1990
%X http://www.canb.auug.org.au/~millerp/

%L debo88
%T PMake \- A Tutorial
%A Adam de Boor
%I University of California, Berkeley
%C Berkeley, CA, USA
%D Jul 1988

%T Icmake
%A Frank B. Brokken
%A Karel Kubat
%I Interdisciplinary Center for the development of Computer Coaches and
Expert systems
%C Groningen, Netherlands
%D 1994
%X This is just a C-like scripting language with some mtime kludges thrown in.

%T Build - A Software Construction Tool
%A B. Erickson
%A J.F. Pellegrin
%J ATT Bell Labs Technical Journal
%V 63
%D 1984
%P 1049-1059
%O [\fBYet To Obtain.\fP]

%T ClearCase Reference Manual
%Q Atria Software
%D 1993
%O [\fBYet To Obtain.\fP]
