.\"
.\"	aegis - project change supervisor
.\"	Copyright (C) 1998, 2002, 2005-2007 Peter Miller
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\"
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\"
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program. If not, see
.\"	<http://www.gnu.org/licenses/>.
.\"
.nr PS 72
.nr VS 75000
.LP
.ad c
DAG
.br
.ad l
.sp 0.3i
.nr PS 36
.nr VS 37
.XP
\(bu
These pair-wise ordered dependencies form a \fIdirected acyclic graph:\fP
.br
.ps 16
.vs 17
.sp 0.5
.PS
.ft CW
ellipseht = 0.4
ellipsewid = ellipseht * 2.5
down
A1: ellipse "prog"
move 3*ellipseht
C2: ellipse "a.h"
C1: ellipse "a.c" with .e at C2.w-(ellipseht,0)
C3: ellipse "b.c" with .w at C2.e+(ellipseht,0)
B1: ellipse "a.o" with .c at 0.5<A1.s,C1.n>
B2: ellipse "b.o" with .c at 0.5<A1.s,C3.n>
D1: ellipse "a.y" with .n at 0.5<C1.s,C2.s>-(0,ellipseht)
arrow from B1.n to A1.sw
arrow from B2.n to A1.se
arrow from C1.n to B1.sw
arrow from C2.n to B1.se
arrow from C2.n to B2.sw
arrow from C3.n to B2.se
arrow from D1.n to C1.se
arrow from D1.n to C2.sw
.ft P
.PE
.XP
\(bu
Make then performs a \fIpost-order\fP traversal of this graph.
.bp
.nr PS 24
.nr VS 25
.XP
\(bu
The pair-wise ordered dependencies for a \fIdirected acyclic graph\fP.
The arrows means that loops aren't loops.
.XP
\(bu
If there is a loop, according to the arrows, then you have an error.
.XP
\(bu
Make then performs a \fIpost-order\fP traversal of this graph.
.br
\(dg This is a weak condition, it only means \[lq]after dependencies
ready\[rq] and
nothing more.  The more files, the deeper the graph, the more variety.
.XP
\(bu
Simple examples like this are easy to understand;
we all start using \fImake\fP with small programs like this.
.br
\(dg mind set
.XP
\(bu
We extrapolate that large multi-directory programs
\.br
\(dg will be just as un-interseting
\.br
\(dg will have itty-bitty makefiles in each directory
