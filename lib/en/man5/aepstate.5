'\" t
.\"	aegis - project change supervisor
.\"	Copyright (C) 1991, 1992, 1993, 1994, 1995 Peter Miller;
.\"	All rights reserved.
.\"
.\"	This program is free software; you can redistribute it and/or modify
.\"	it under the terms of the GNU General Public License as published by
.\"	the Free Software Foundation; either version 2 of the License, or
.\"	(at your option) any later version.
.\"
.\"	This program is distributed in the hope that it will be useful,
.\"	but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"	GNU General Public License for more details.
.\"
.\"	You should have received a copy of the GNU General Public License
.\"	along with this program; if not, write to the Free Software
.\"	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
.\"
.\" MANIFEST: description of aegis project state file format
.\"
.so z_name.so
.TH aepstate 5 \*(N) "Reference Manual"
.SH NAME
aepstate - project state file
.XX "aepstate(5)" "project state file format"
.SH SYNOPSIS
\fIproject\fP\f(CW/info/state\fP
.SH DESCRIPTION
The
\fIproject\fP\f(CW/info/state\fP
file is used to store state information about a project.
.PP
This file is maintained by
.B \*(n)
and thus should not be edited by humans.
.SH CONTENTS
.TP 8n
next_test_number = integer;
Each test is numbered uniquely acrosss all branches of the project.
The name is of the form
.I "t[0-9][0-9][0-9][0-9][am].sh"
('a' for automatic and 'm' for manual.)
.SS Almost Obsolete Fields
The following fields are obsolete.
They will persist until the next
.IR aenrls (1),
and the new project so generated will use them to define
its default branching.
.TP 8n
version_major = integer;
The major version number of this release of the project.
Always one or more.
.TP 8n
version_minor = integer;
The minor version number of this release of the project.
Always zero or more.
.SS Obsolete Fields
The following fields are obsolete.
They are only present in projects which have yet to be
converted to the new branch format.
When
.I Aegis
sees them,
they will be moved into the "trunk" transaction.
.TP 8n
description = string;
This field contains
a description of the project.
Large amounts of prose are not required;
a single line is sufficient.
.TP 8n
owner_name = string;
This field is ignored.
.TP 8n
group_name = string;
This field is ignored.
.TP 8n
developer_may_review = boolean;
If this field is true, then a developer may review her own change.
This is probably only a good idea for projects of less than 3 people.
The idea is for as many people as possible to critically examine a change.
.TP 8n
developer_may_integrate = boolean;
If this field is true, then a developer may integrate her own change.
This is probably only a good idea for projects of less than 3 people.
The idea is for as many people as possible to critically examine a change.
.TP 8n
reviewer_may_integrate = boolean;
If this field is true, then a reviewer may integrate a change she reviewed.
This is probably only a good idea for projects of less than 3 people.
The idea is for as many people as possible to critically examine a change.
.TP 8n
developers_may_create_changes = boolean;
This field is true if developers may created changes,
in addition to administrators.
This tends to be a very useful thing,
since developers find most of the bugs.
.TP 8n
forced_develop_begin_notify_command = string;
This command is used to notify a developer
that a change requires developing;
it is issued when a project administrator uses an
.I "aedb -User"
command to force development of a change by a specific user.
All of the substitutions described in
.IR aesub (5)
are available.
This field is optional.
.TP 8n
develop_end_notify_command = string;
This command is used to
notify that a change is ready for review.
It will probably use mail,
or it could be an in-house bulletin board.
This field is optional,
if not present no notification will be given.
This command could also be used to notify other management systems,
such as progress and defect tracking.
All of the substitutions described by
.IR aesub (5)
are available.
.TP 8n
develop_end_undo_notify_command = string;
This command is used to
notify that a change had been withdrawn from review
for further development.
It will probably use mail,
or it could be an in-house bulletin board.
This field is optional,
if not present no notification will be given.
This command could also be used to notify other management systems,
such as progress and defect tracking.
All of the substitutions described by
.IR aesub (5)
are available.
.TP 8n
review_pass_notify_command = string;
This command is used to
notify that a review has passed.
It will probably use mail,
or it could be an in-house bulletin board.
This field is optional,
if not present no notification will be given.
This command could also be used to notify other management systems,
such as progress and defect tracking.
All of the substitutions described by
.IR aesub (5)
are available.
.TP 8n
review_pass_undo_notify_command = string;
This command is used to
notify that a review has passed.
It will probably use mail,
or it could be an in-house bulletin board.
This field is optional,
if not present no notification will be given.
This command could also be used to notify other management systems,
such as progress and defect tracking.
Defaults to the same action as the \fIdevelop_end_notify_command\fP field.
All of the substitutions described by
.IR aesub (5)
are available.
.TP 8n
review_fail_notify_command = string;
This command is used to
notify that a review has failed.
It will probably use mail,
or it could be an in-house bulletin board.
This field is optional,
if not present no notification will be given.
This command could also be used to notify other management systems,
such as progress and defect tracking.
All of the substitutions described by
.IR aesub (5)
are available.
.TP 8n
integrate_pass_notify_command = string;
This command is used to
notify that an integration has passed.
It will probably use mail,
or it could be an in-house bulletin board.
This field is optional,
if not present no notification will be given.
This command could also be used to notify other management systems,
such as progress and defect tracking.
All of the substitutions described by
.IR aesub (5)
are available.
.TP 8n
integrate_fail_notify_command = string;
This command is used to
notify that an integration has failed.
It will probably use mail,
or it could be an in-house bulletin board.
This field is optional,
if not present no notification will be given.
This command could also be used to notify other management systems,
such as progress and defect tracking.
All of the substitutions described by
.IR aesub (5)
are available.
.TP 8n
default_development_directory = string;
The pathname of where to place new development directories.
The pathname must be absolute.
This field is only consulted if
the field of the same name in the user configuration file is not set.
.TP 8n
umask = integer;
.br
File permission mode mask.
See
.IR umask (2)
for more information.
This value will always be OR'ed with 022,
because
.I aegis
is paranoid.
.TP 8n
default_test_exemption = boolean;
.br
This field contains what to do when a change is created with
no test exemption specified.
.TP 8n
copyright_years = [ integer ];
.br
This field contains a list of copyright years,
for use in copyright notices,
etc.
It is updated each integrate_begin,
if necessary,
to include the current year.
Available as the ${Copyright_Years} substitution,
and included in the version listing.
.TP 8n
next_change_number = integer;
Changes are numbered sequentially from one.
This field records the next unused change number.
.TP 8n
next_delta_number = integer;
Deltas are numbered sequentially from one.
This field records the next unused delta number.
.TP 8n
src = [ { ... } ];
This field is a list of files in the project.
Each list item has the form:
.RS
.TP 8n
file_name = string;
The name of the file, relative to the baseline.
.TP 8n
usage = file_usage;
What the file is for.
.TP
edit_number = string;
The edit number of the file.
.TP 8n
locked_by = integer;
The change which locked this file.
.br
Caveat: this field is redundant,
you can figure it out by scanning all of he change files.
Having it here is very convenient,
even though it means multiple updates.
.TP 8n
about_to_be_created_by = integer;
The change which is about to create this file for the first time.
Same caveat as above.
.TP 8n
deleted_by = integer;
The change which last deleted this file.
We never throw them away, because 
(a) it may be created again, and more important
(b) we need it to recreate earlier deltas.
.RE
.TP
history = [{ ... }];
This field contains a history of integrations for the project.
Updated by each successful '\*(n) -Integrate_Pass' command.
.RS
.TP 8n
delta_number = integer;
The delta number of the integration.
.TP 8n
change_number = integer;
The number of the change which was integrated.
.TP 8n
name = [ string ];
The names by which this delta is known.
.RE
.TP 8n
change = [integer];
The list of changes which have been created to date.
.TP 8n
administrator = [string];
The list of administrators of the project.
.TP 8n
developer = [string];
The list of developers of the project.
.TP 8n
reviewer = [string];
The list of reviewers of the project.
.TP 8n
integrator = [string];
The list of integrators of the project.
.TP 8n
currently_integrating_change = integer;
The change currently being integrated.
Only one change (within a project) may be integrated at a time.
Only set when an integration is in progress.
.TP 8n
version_major = integer;
The major version number of this release of the project.
Always one or more.
.TP 8n
version_minor = integer;
The minor version number of this release of the project.
Always zero or more.
.TP 8n
version_previous = string;
The version number this project was derived from.
This is of most use when producing "patch" files.
.SH SEE ALSO
.TP 8n
.IR aenpr (1)
create a new project
.TP 8n
.IR aegis (5)
\*(n) file format syntax
.TP 8n
.IR aepattr (5)
project attributes file format
.TP 8n
.IR aecstate (5)
change state file
.TP 8n
.IR aefstate (5)
file state file
.so ../man1/z_cr.so
