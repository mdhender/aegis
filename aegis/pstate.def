/*
 *	aegis - project change supervisor
 *	Copyright (C) 1991, 1992, 1993 Peter Miller.
 *	All rights reserved.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this program; if not, write to the Free Software
 *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 * 
 * MANIFEST: project state file contents definition
 *
 * normally resides at "projdir"/info/state
 *
 * read and written by aegis, so it needs locking
 *
 * If you change this file, don't forget to change
 *	man5/aepstate.5
 */

#include <pattr.def>

/*
 * Changes are numbered sequentially from one.
 * This field records the next unused change number.
 */
next_change_number = integer;

/*
 * Deltas are numbered sequentailly from one.
 * This field records the next unused delta number.
 */
next_delta_number = integer;

/*
 * Each test is numbered uniquely.
 * The name is of the form t[0-9][0-9][0-9][0-9][am].sh
 * ('a' for automatic and 'm' for manual.)
 * It would be possible to number each test within each change,
 * (of the form C???T??[AM].sh)
 * but this would not cover -New_ReLeaSe, where the test numbering
 * can not start at 1 again, otherwise tests could not be retained
 * across releases.
 */
next_test_number = integer;

/*
 * This field is a list of the files in the project.
 */
src =
[
    {
	/*
	 * The name of the file, relative to the baseline.
	 */
	file_name = string;

	/*
	 * What the file is for.
	 */
	usage = file_usage;

	/*
	 * The edit number of the file.
	 */
	edit_number = string;

	/*
	 * The change which locked this file.
	 *
	 * Caveat: this field is redundant, you can figure it out by scanning
	 * all of he change files.  Having it here is very convenient,
	 * even though it means multiple updates.
	 */
	locked_by = integer;

	/*
	 * The change which is about to create this file
	 * for the first time.
	 * Same caveat as above.
	 */
	about_to_be_created_by = integer;

	/*
	 * The change which last deleted this file.
	 * We never throw them away, becase 
	 * (a) it may be created again, and more imortant
	 * (b) we need it to recreate earlier deltas.
	 */
	deleted_by = integer;
    }
];

/*
 * This field contains a history of integrations for the project.
 * Update by each successful 'aegis -Integrate_Pass' command.
 */
history =
[
	{
		/*
		 * The delta number of the integration.
		 */
		delta_number = integer;

		/*
		 * The number of the change which was integrated.
		 */
		change_number = integer;
	}
];

/*
 * The list of changes which have been created to date.
 */
change = [integer];

/*
 * The list of administrators of the project.
 */
administrator = [string];

/*
 * The list of developers of the project.
 */
developer = [string];

/*
 * The list of reviewers of the project.
 */
reviewer = [string];

/*
 * The list of integrators of the project.
 */
integrator = [string];

/*
 * The change currently being integrated.
 * Only one change (within a project) may be integrated at a time.
 * Only set when an integration is in progress.
 */
currently_integrating_change = integer;

/*
 * The version numbers for (this release of) the project.
 *	(The major verion defaults to one if not given,
 *	the minor version defaults to zero if not given.)
 */
version_major = integer;
version_minor = integer;

/*
 * The version number this project was derived from.
 * This is of most use when producing "patch" files.
 */
version_previous = string;
