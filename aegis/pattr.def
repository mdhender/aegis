/*
 *	aegis - project change supervisor
 *	Copyright (C) 1991, 1992, 1993 Peter Miller.
 *	All rights reserved.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this program; if not, write to the Free Software
 *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 * MANIFEST: project attributes file contents definition
 *
 * if you change this file, don't forget to change
 *	man5/aepattr.so
 *	aegis/pattr_ed.c
 *	aegis/new_rele.c
 */

#include <common.def>

/*
 * This field contains
 * a description of the project.
 * Large amounts of prose are not required;
 * a single line is sufficient.
 */
description = string;

/*
 * This field contains
 * the name of the user to whom baseline files belong.
 */
owner_name = string;

/*
 * This field contains
 * the name of the group to which baseline files belong.
 */
group_name = string;

/*
 * If this field is true, then a developer may review her own change.
 * This is probably only a good idea for projects of less than 3 people.
 * The idea is for as many people as possible to critically examine a change.
 */
developer_may_review = boolean;

/*
 * If this field is true, then a developer may integrate her own change.
 * This is probably only a good idea for projects of less than 3 people.
 * The idea is for as many people as possible to critically examine a change.
 */
developer_may_integrate = boolean;

/*
 * If this field is true, then a reviewer may integrate a change she reviewed.
 * This is probably only a good idea for projects of less than 3 people.
 * The idea is for as many people as possible to critically examine a change.
 */
reviewer_may_integrate = boolean;

/*
 * This field is true if developers may created changes,
 * in addition to administrators.
 * This tends to be a very useful thing,
 * since developers find most of the bugs.
 */
developers_may_create_changes = boolean;

/*
 * notify that a change requires reviewing
 * All of the substitutions described in aesub(5) are available.
 * this field is optional
 *
 * This command could also be used to notify other management systems,
 * such as progress and defect tracking.
 */
develop_end_notify_command = string;

/*
 * notify that a change has been withdrawn from review
 * for further development
 * All of the substitutions described in aesub(5) are available.
 * this field is optional
 *
 * This command could also be used to notify other management systems,
 * such as progress and defect tracking.
 */
develop_end_undo_notify_command = string;

/*
 * notify that the review has passed
 * All of the substitutions described in aesub(5) are available.
 * this field is optional
 *
 * This command could also be used to notify other management systems,
 * such as progress and defect tracking.
 */
review_pass_notify_command = string;

/*
 * notify that a review pass has has been rescinded
 * All of the substitutions described in aesub(5) are available.
 * this field is optional.
 * Defaults to the develop_end_notify_command field.
 *
 * This command could also be used to notify other management systems,
 * such as progress and defect tracking.
 */
review_pass_undo_notify_command = string;

/*
 * notify that the review has failed
 * All of the substitutions described in aesub(5) are available.
 * this field is optional
 *
 * This command could also be used to notify other management systems,
 * such as progress and defect tracking.
 */
review_fail_notify_command = string;

/*
 * notify that the integration has passed
 * All of the substitutions described in aesub(5) are available.
 * this field is optional
 *
 * This command could also be used to notify other management systems,
 * such as progress and defect tracking.
 */
integrate_pass_notify_command = string;

/*
 * notify that the integration has failed
 * All of the substitutions described in aesub(5) are available.
 * this field is optional
 *
 * This command could also be used to notify other management systems,
 * such as progress and defect tracking.
 */
integrate_fail_notify_command = string;

/*
 * The pathname of where to place new development directories.
 * The pathname must be absolute.
 * Only consulted if the uconf field of the same name is not set.
 * Defaults to $HOME.
 */
default_development_directory = string;

/*
 * File permission mode mask.  See umask(2) for more information.
 * This value will always be OR'ed with 022, because aegis is paranoid.
 */
umask = integer;

/*
 * This field contains what to do when a change is created with
 * no test exemption specified.
 */
default_test_exemption = boolean;
